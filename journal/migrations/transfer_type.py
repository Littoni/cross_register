# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-06-30 15:07
from __future__ import unicode_literals

from django.db import migrations


class TransitionalPunchBlockType:
    def __init__(self, **kwargs):
        self.long_name = kwargs.get('long_name', '')
        self.short_name = kwargs.get('short_name', '')
        self.regexp = kwargs.get('regexp', '')
        self.is_station_group = kwargs.get('is_station_group', None)
        self.number_group = kwargs.get('number_group', 0)
        self.location_group = kwargs.get('location_group', 0)


def link_types(apps, schema_editor):
    PunchBlockType = apps.get_model('journal', 'PunchBlockType')
    PunchBlock = apps.get_model('journal', 'PunchBlock')

    transitional_city = TransitionalPunchBlockType(
        long_name='Гром-полоса',
        short_name='Гр',
        regexp=r'^Гр(\d+)/(\d+)$',
        number_group=2,
        location_group=1,
    )
    transitional_trunk = TransitionalPunchBlockType(
        long_name='Магистраль',
        short_name='М',
        regexp=r'^М(с)?(\d+)($|/(.*)$)',
        is_station_group=1,
        number_group=2,
        location_group=4,
    )
    transitional_extension = TransitionalPunchBlockType(
        long_name='Распределение',
        short_name='Р',
        regexp=r'^Р(с)?(\d+)($|/(.*)$)',
        is_station_group=1,
        number_group=2,
        location_group=4,
    )

    types_binding = {
        'city': transitional_city,
        'trunk': transitional_trunk,
        'extension': transitional_extension,
    }

    for pb in PunchBlock.objects.all():
        transitional_type = types_binding[pb.type]
        new_type, created = PunchBlockType.objects.get_or_create(
            long_name=transitional_type.long_name,
            short_name=transitional_type.short_name,
            regexp=transitional_type.regexp,
            is_station_group=transitional_type.is_station_group,
            number_group=transitional_type.number_group,
            location_group=transitional_type.location_group,
        )

        pb.type_tmp = new_type
        pb.save_without_historical_record()


class Migration(migrations.Migration):

    dependencies = [
        ('journal', '0011_auto_20170621_1439'),
    ]

    operations = [
        migrations.RunPython(link_types),
    ]
